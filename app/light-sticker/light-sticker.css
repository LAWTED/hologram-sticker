/* Root variables */
:root {
  --card-width: 260px;
  --rotate-x: 25deg;
  --rotate-y: -20deg;
}

/* Base styles */
*, *::before, *::after {
  box-sizing: border-box;
  transform-style: preserve-3d;
}

body {
  margin: 0;
  padding: 0;
  background: #000;
  min-height: 100vh;
  overflow: hidden;
  font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue', Helvetica, Arial, sans-serif, system-ui;
}

body::before {
  --size: 45px;
  --line: rgba(255, 255, 255, 0.2);
  content: '';
  height: 100vh;
  width: 100vw;
  position: fixed;
  background: linear-gradient(
        90deg,
        var(--line) 1px,
        transparent 1px var(--size)
      )
      calc(var(--size) * 0.36) 50% / var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0%
      calc(var(--size) * 0.32) / var(--size) var(--size);
  mask: linear-gradient(-20deg, transparent 50%, white);
  top: 0;
  transform-style: flat;
  pointer-events: none;
  z-index: -1;
}

/* Scene */
.scene {
  perspective: 1000px;
  position: fixed;
  inset: 0;
  transform: translate3d(0, 0, 100vmin);
}

/* Holographic Sticker */
.sticker-card {
  --border: 8cqi;
  aspect-ratio: 3 / 4;
  width: calc(var(--card-width) * 0.8);
  container-type: inline-size;
  touch-action: none;
  background: transparent;
  perspective: 1600px;
  position: fixed;
  top: 50%;
  left: calc(50% + 180px);
  translate: -50% -50%;
  display: block;
  transition: transform 0.2s;
}

.sticker-card:hover {
  transition: transform 0s;
  transform: rotateX(calc(var(--sticker-pointer-y) * var(--rotate-x)))
            rotateY(calc(var(--sticker-pointer-x) * var(--rotate-y)));
  animation: set backwards 0.2s;
}

.sticker-card:hover .sticker-image {
  opacity: 1 !important;
}

@keyframes set {
  0% {
    transform: rotateX(0deg) rotateY(0deg);
  }
}

.sticker-card:hover .refraction {
  opacity: 1;
}

.sticker-card:hover .sticker-pattern {
  opacity: 1 !important;
}

/* Sticker Content */
.sticker-content {
  position: absolute;
  inset: 0;
}

/* Sticker Background */
.sticker-background {
  position: absolute;
  inset: 0;
}

/* Sticker Pattern */
.sticker-pattern {
  position: absolute;
  inset: 0;
}

/* Sticker Overlay */
.sticker-overlay {
  position: absolute;
  inset: 0;
  z-index: 1;
}

.sticker-image {
  object-fit: contain !important;
  filter: brightness(1.0) drop-shadow(0 0 15px rgba(255, 255, 255, 0.2));
}

.sticker-overlay-image {
  object-fit: contain !important;
  opacity: 0.2;
  filter: brightness(1.2) drop-shadow(0 0 10px rgba(255, 255, 255, 0.1));
}

.sticker-pattern::before {
  content: '';
  position: absolute;
  inset: 0;
  background: hsl(0 0% 80%);
}

/* Sticker Pattern Refraction */
.sticker-pattern .refraction {
  position: absolute;
  width: 500%;
  aspect-ratio: 1 / 1;
  bottom: 0;
  left: 0;
  filter: saturate(2);
  will-change: translate, scale, filter;
  background: radial-gradient(
    circle at 0 100%,
    transparent 10%,
    hsl(5 100% 80%),
    hsl(150 100% 60%),
    hsl(220 90% 70%),
    transparent 60%
  );
  transform-origin: 0 100%;
  scale: min(1, calc(0.15 + var(--sticker-pointer-x) * 0.25));
  translate: clamp(-10%, calc(-10% + var(--sticker-pointer-x) * 10%), 10%)
            calc(max(0%, var(--sticker-pointer-y) * -1 * 10%));
  opacity: 0;
  transition: opacity 0.2s ease-out;
}

.sticker-pattern .refraction:nth-of-type(2) {
  bottom: unset;
  top: 0;
  left: unset;
  right: 0;
  scale: min(1, calc(0.15 + var(--sticker-pointer-x) * -0.65));
  translate: clamp(-10%, calc(10% - var(--sticker-pointer-x) * -10%), 10%)
            calc(min(0%, var(--sticker-pointer-y) * -10%));
  transform-origin: 100% 0;
  background: radial-gradient(
    circle at 100% 0,
    transparent 10%,
    hsl(5 100% 80%),
    hsl(150 100% 60%),
    hsl(220 90% 70%),
    transparent 60%
  );
}

.sticker-card:hover .sticker-pattern .refraction {
  opacity: 1;
}

/* Initial animations for sticker */
.sticker-image,
.sticker-pattern,
.sticker-overlay {
  opacity: 0;
}

.sticker-image {
  animation: fadeIn 0.5s 1.4s forwards;
}

.sticker-pattern {
  animation: fadeIn 0.5s 1.6s forwards;
}

.sticker-overlay {
  animation: fadeIn 0.5s 1.8s forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}